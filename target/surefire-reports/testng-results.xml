<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="19" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-15T20:02:14 IST" name="BookStore API Test Suite" finished-at="2025-08-15T20:02:19 IST" duration-ms="4702">
    <groups>
      <group name="userCreation">
        <method signature="CreateUserSignupTest.createNewUser()[pri:2, instance:com.bookapi.testcases.CreateUserSignupTest@40ef3420]" name="createNewUser" class="com.bookapi.testcases.CreateUserSignupTest"/>
      </group> <!-- userCreation -->
    </groups>
    <test started-at="2025-08-15T20:02:14 IST" name="BookStore API Tests" finished-at="2025-08-15T20:02:19 IST" duration-ms="4702">
      <class name="com.bookapi.testcases.CreateBookTest">
        <test-method signature="validatingUserAbleToCreateNewBook()[pri:9, instance:com.bookapi.testcases.CreateBookTest@402bba4f]" started-at="2025-08-15T20:02:18 IST" name="validatingUserAbleToCreateNewBook" description="Validating if user able to create a book" finished-at="2025-08-15T20:02:18 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatingUserAbleToCreateNewBook -->
        <test-method signature="validatingNewBookIsDisplayedInList()[pri:10, instance:com.bookapi.testcases.CreateBookTest@402bba4f]" started-at="2025-08-15T20:02:18 IST" name="validatingNewBookIsDisplayedInList" description="Validating if newly created book is displayed in the list of all the books" finished-at="2025-08-15T20:02:18 IST" depends-on-methods="com.bookapi.testcases.CreateBookTest.validatingUserAbleToCreateNewBook" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatingNewBookIsDisplayedInList -->
      </class> <!-- com.bookapi.testcases.CreateBookTest -->
      <class name="com.bookapi.testcases.UpdateBookTest">
        <test-method signature="validateUserAbleToUpdateNewlyAddedBook()[pri:12, instance:com.bookapi.testcases.UpdateBookTest@59fd97a8]" started-at="2025-08-15T20:02:19 IST" name="validateUserAbleToUpdateNewlyAddedBook" description="Updating newly added book" finished-at="2025-08-15T20:02:19 IST" duration-ms="79" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUserAbleToUpdateNewlyAddedBook -->
        <test-method signature="validatingIfUserAbleToSearchUpdatedBookByID()[pri:13, instance:com.bookapi.testcases.UpdateBookTest@59fd97a8]" started-at="2025-08-15T20:02:19 IST" name="validatingIfUserAbleToSearchUpdatedBookByID" description="Validating newly created book can be searched using ID" finished-at="2025-08-15T20:02:19 IST" depends-on-methods="com.bookapi.testcases.UpdateBookTest.validateUserAbleToUpdateNewlyAddedBook" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatingIfUserAbleToSearchUpdatedBookByID -->
      </class> <!-- com.bookapi.testcases.UpdateBookTest -->
      <class name="com.bookapi.testcases.LoginForAccessTokenTest">
        <test-method signature="loginUsingnewlyCreatedUser()[pri:4, instance:com.bookapi.testcases.LoginForAccessTokenTest@498d318c]" started-at="2025-08-15T20:02:17 IST" name="loginUsingnewlyCreatedUser" description="Login using newly created user" depends-on-groups="userCreation" finished-at="2025-08-15T20:02:17 IST" duration-ms="303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUsingnewlyCreatedUser -->
        <test-method signature="loginUsingIncorrectCred(java.lang.String,java.lang.String)[pri:5, instance:com.bookapi.testcases.LoginForAccessTokenTest@498d318c]" started-at="2025-08-15T20:02:17 IST" name="loginUsingIncorrectCred" description="NEGATIVE: Login using incorrect credentails" data-provider="setOfInvalidCreds" finished-at="2025-08-15T20:02:18 IST" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user6545@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Incorrectpwd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUsingIncorrectCred -->
        <test-method signature="loginUsingIncorrectCred(java.lang.String,java.lang.String)[pri:5, instance:com.bookapi.testcases.LoginForAccessTokenTest@498d318c]" started-at="2025-08-15T20:02:18 IST" name="loginUsingIncorrectCred" description="NEGATIVE: Login using incorrect credentails" data-provider="setOfInvalidCreds" finished-at="2025-08-15T20:02:18 IST" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[IncorrectUser]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pwd4712]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUsingIncorrectCred -->
        <test-method signature="loginUsingIncorrectCred(java.lang.String,java.lang.String)[pri:5, instance:com.bookapi.testcases.LoginForAccessTokenTest@498d318c]" started-at="2025-08-15T20:02:18 IST" name="loginUsingIncorrectCred" description="NEGATIVE: Login using incorrect credentails" data-provider="setOfInvalidCreds" finished-at="2025-08-15T20:02:18 IST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user6545@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUsingIncorrectCred -->
        <test-method signature="loginUsingIncorrectCred(java.lang.String,java.lang.String)[pri:5, instance:com.bookapi.testcases.LoginForAccessTokenTest@498d318c]" started-at="2025-08-15T20:02:18 IST" name="loginUsingIncorrectCred" description="NEGATIVE: Login using incorrect credentails" data-provider="setOfInvalidCreds" finished-at="2025-08-15T20:02:18 IST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pwd4712]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUsingIncorrectCred -->
      </class> <!-- com.bookapi.testcases.LoginForAccessTokenTest -->
      <class name="com.bookapi.testcases.HealthCheckTest">
        <test-method signature="validatingServiceHealth()[pri:1, instance:com.bookapi.testcases.HealthCheckTest@5f058f00]" started-at="2025-08-15T20:02:14 IST" name="validatingServiceHealth" description="PreRequiste- Validating if Server is up and running." finished-at="2025-08-15T20:02:17 IST" duration-ms="2369" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatingServiceHealth -->
      </class> <!-- com.bookapi.testcases.HealthCheckTest -->
      <class name="com.bookapi.testcases.GetBookByIdTest">
        <test-method signature="validatingIfUserAbleToSearchBookByID()[pri:11, instance:com.bookapi.testcases.GetBookByIdTest@795cd85e]" started-at="2025-08-15T20:02:18 IST" name="validatingIfUserAbleToSearchBookByID" description="Validating newly created book can be searched using ID" finished-at="2025-08-15T20:02:19 IST" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatingIfUserAbleToSearchBookByID -->
        <test-method signature="validatingIfUserAbleToSearchIncorrectBookByID()[pri:11, instance:com.bookapi.testcases.GetBookByIdTest@795cd85e]" started-at="2025-08-15T20:02:19 IST" name="validatingIfUserAbleToSearchIncorrectBookByID" description="NEGATIVE: Validating user unable to search a book with incorrect ID" finished-at="2025-08-15T20:02:19 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatingIfUserAbleToSearchIncorrectBookByID -->
      </class> <!-- com.bookapi.testcases.GetBookByIdTest -->
      <class name="com.bookapi.testcases.CreateUserSignupTest">
        <test-method signature="createNewUser()[pri:2, instance:com.bookapi.testcases.CreateUserSignupTest@40ef3420]" started-at="2025-08-15T20:02:17 IST" name="createNewUser" description="Validating creation of new user" finished-at="2025-08-15T20:02:17 IST" duration-ms="403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewUser -->
        <test-method signature="createExistingUser()[pri:3, instance:com.bookapi.testcases.CreateUserSignupTest@40ef3420]" started-at="2025-08-15T20:02:17 IST" name="createExistingUser" description="NEGATIVE: Validating creation of new user with existing email and id" finished-at="2025-08-15T20:02:17 IST" depends-on-methods="com.bookapi.testcases.CreateUserSignupTest.createNewUser" duration-ms="37" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExistingUser -->
      </class> <!-- com.bookapi.testcases.CreateUserSignupTest -->
      <class name="com.bookapi.testcases.GetAllBooksTest">
        <test-method signature="validatingBooksAreDisplayed()[pri:6, instance:com.bookapi.testcases.GetAllBooksTest@6e171cd7]" started-at="2025-08-15T20:02:18 IST" name="validatingBooksAreDisplayed" description="Validating if books are displayed" finished-at="2025-08-15T20:02:18 IST" duration-ms="36" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatingBooksAreDisplayed -->
        <test-method signature="NoBooksDisplayedForInvalidToken()[pri:7, instance:com.bookapi.testcases.GetAllBooksTest@6e171cd7]" started-at="2025-08-15T20:02:18 IST" name="NoBooksDisplayedForInvalidToken" description="NEGATIVE: Validating if books are not displayed when invalid token used" finished-at="2025-08-15T20:02:18 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoBooksDisplayedForInvalidToken -->
        <test-method signature="NoBooksDisplayedForNoToken()[pri:8, instance:com.bookapi.testcases.GetAllBooksTest@6e171cd7]" started-at="2025-08-15T20:02:18 IST" name="NoBooksDisplayedForNoToken" description="NEGATIVE: Validating if books are displayed when no token used" finished-at="2025-08-15T20:02:18 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoBooksDisplayedForNoToken -->
      </class> <!-- com.bookapi.testcases.GetAllBooksTest -->
      <class name="com.bookapi.testcases.DeleteBookTest">
        <test-method signature="validatingIfUserAbleToDeleteBookByID()[pri:14, instance:com.bookapi.testcases.DeleteBookTest@f5ac9e4]" started-at="2025-08-15T20:02:19 IST" name="validatingIfUserAbleToDeleteBookByID" description="Delating newly created book can be searched using ID" finished-at="2025-08-15T20:02:19 IST" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatingIfUserAbleToDeleteBookByID -->
        <test-method signature="validatingIfUserAbleToDeleteBookByIDAgain()[pri:14, instance:com.bookapi.testcases.DeleteBookTest@f5ac9e4]" started-at="2025-08-15T20:02:19 IST" name="validatingIfUserAbleToDeleteBookByIDAgain" description="NEGATIVE: againDelating newly created book can be searched using ID" finished-at="2025-08-15T20:02:19 IST" depends-on-methods="com.bookapi.testcases.DeleteBookTest.validatingIfUserAbleToDeleteBookByID" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatingIfUserAbleToDeleteBookByIDAgain -->
      </class> <!-- com.bookapi.testcases.DeleteBookTest -->
    </test> <!-- BookStore API Tests -->
  </suite> <!-- BookStore API Test Suite -->
</testng-results>
