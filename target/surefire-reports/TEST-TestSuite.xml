<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="TestSuite" time="6.047" tests="19" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\Nishant Guleri\eclipse-workspace\RestAssuredShiv\target\test-classes;C:\Users\Nishant Guleri\eclipse-workspace\RestAssuredShiv\target\classes;C:\Users\Nishant Guleri\.m2\repository\io\rest-assured\json-schema-validator\5.5.0\json-schema-validator-5.5.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\json-schema-validator\2.2.14\json-schema-validator-2.2.14.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\jackson-coreutils-equivalence\1.0\jackson-coreutils-equivalence-1.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\json-schema-core\1.2.14\json-schema-core-1.2.14.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\uri-template\0.10\uri-template-0.10.jar;C:\Users\Nishant Guleri\.m2\repository\org\mozilla\rhino\1.7.7.2\rhino-1.7.7.2.jar;C:\Users\Nishant Guleri\.m2\repository\com\sun\mail\mailapi\1.6.2\mailapi-1.6.2.jar;C:\Users\Nishant Guleri\.m2\repository\joda-time\joda-time\2.10.5\joda-time-2.10.5.jar;C:\Users\Nishant Guleri\.m2\repository\com\googlecode\libphonenumber\libphonenumber\8.11.1\libphonenumber-8.11.1.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Nishant Guleri\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\guava\guava\33.2.1-jre\guava-33.2.1-jre.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Nishant Guleri\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\errorprone\error_prone_annotations\2.26.1\error_prone_annotations-2.26.1.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Nishant Guleri\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Nishant Guleri\.m2\repository\io\rest-assured\rest-assured\5.5.0\rest-assured-5.5.0.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\groovy\groovy\4.0.22\groovy-4.0.22.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\groovy\groovy-xml\4.0.22\groovy-xml-4.0.22.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;C:\Users\Nishant Guleri\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Nishant Guleri\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\httpcomponents\httpmime\4.5.13\httpmime-4.5.13.jar;C:\Users\Nishant Guleri\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Nishant Guleri\.m2\repository\io\rest-assured\json-path\5.5.0\json-path-5.5.0.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\groovy\groovy-json\4.0.22\groovy-json-4.0.22.jar;C:\Users\Nishant Guleri\.m2\repository\io\rest-assured\rest-assured-common\5.5.0\rest-assured-common-5.5.0.jar;C:\Users\Nishant Guleri\.m2\repository\io\rest-assured\xml-path\5.5.0\xml-path-5.5.0.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\commons\commons-lang3\3.11\commons-lang3-3.11.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\logging\log4j\log4j-core\2.25.1\log4j-core-2.25.1.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\logging\log4j\log4j-api\2.25.1\log4j-api-2.25.1.jar;C:\Users\Nishant Guleri\.m2\repository\org\testng\testng\7.11.0\testng-7.11.0.jar;C:\Users\Nishant Guleri\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Nishant Guleri\.m2\repository\org\jcommander\jcommander\1.83\jcommander-1.83.jar;C:\Users\Nishant Guleri\.m2\repository\org\webjars\jquery\3.7.1\jquery-3.7.1.jar;C:\Users\Nishant Guleri\.m2\repository\com\aventstack\extentreports\5.1.2\extentreports-5.1.2.jar;C:\Users\Nishant Guleri\.m2\repository\io\reactivex\rxjava3\rxjava\3.1.6\rxjava-3.1.6.jar;C:\Users\Nishant Guleri\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\Nishant Guleri\.m2\repository\org\freemarker\freemarker\2.3.32\freemarker-2.3.32.jar;C:\Users\Nishant Guleri\.m2\repository\org\projectlombok\lombok\1.18.26\lombok-1.18.26.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="IN"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-17.0.2\bin"/>
    <property name="sun.java.command" value="C:\Users\Nishant Guleri\AppData\Local\Temp\surefire9623802392026206975\surefirebooter-20250815223711871_3.jar C:\Users\Nishant Guleri\AppData\Local\Temp\surefire9623802392026206975 2025-08-15T22-37-11_169-jvmRun1 surefire-20250815223711871_1tmp surefire_0-20250815223711871_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\Nishant Guleri\eclipse-workspace\RestAssuredShiv\target\test-classes;C:\Users\Nishant Guleri\eclipse-workspace\RestAssuredShiv\target\classes;C:\Users\Nishant Guleri\.m2\repository\io\rest-assured\json-schema-validator\5.5.0\json-schema-validator-5.5.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\json-schema-validator\2.2.14\json-schema-validator-2.2.14.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\jackson-coreutils-equivalence\1.0\jackson-coreutils-equivalence-1.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.0\jackson-databind-2.11.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.0\jackson-annotations-2.11.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.0\jackson-core-2.11.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\jackson-coreutils\2.0\jackson-coreutils-2.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\msg-simple\1.2\msg-simple-1.2.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\btf\1.3\btf-1.3.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\json-schema-core\1.2.14\json-schema-core-1.2.14.jar;C:\Users\Nishant Guleri\.m2\repository\com\github\java-json-tools\uri-template\0.10\uri-template-0.10.jar;C:\Users\Nishant Guleri\.m2\repository\org\mozilla\rhino\1.7.7.2\rhino-1.7.7.2.jar;C:\Users\Nishant Guleri\.m2\repository\com\sun\mail\mailapi\1.6.2\mailapi-1.6.2.jar;C:\Users\Nishant Guleri\.m2\repository\joda-time\joda-time\2.10.5\joda-time-2.10.5.jar;C:\Users\Nishant Guleri\.m2\repository\com\googlecode\libphonenumber\libphonenumber\8.11.1\libphonenumber-8.11.1.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Nishant Guleri\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\guava\guava\33.2.1-jre\guava-33.2.1-jre.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\guava\failureaccess\1.0.2\failureaccess-1.0.2.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Nishant Guleri\.m2\repository\org\checkerframework\checker-qual\3.42.0\checker-qual-3.42.0.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\errorprone\error_prone_annotations\2.26.1\error_prone_annotations-2.26.1.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\j2objc\j2objc-annotations\3.0.0\j2objc-annotations-3.0.0.jar;C:\Users\Nishant Guleri\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Nishant Guleri\.m2\repository\io\rest-assured\rest-assured\5.5.0\rest-assured-5.5.0.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\groovy\groovy\4.0.22\groovy-4.0.22.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\groovy\groovy-xml\4.0.22\groovy-xml-4.0.22.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;C:\Users\Nishant Guleri\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Nishant Guleri\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\httpcomponents\httpmime\4.5.13\httpmime-4.5.13.jar;C:\Users\Nishant Guleri\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Nishant Guleri\.m2\repository\io\rest-assured\json-path\5.5.0\json-path-5.5.0.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\groovy\groovy-json\4.0.22\groovy-json-4.0.22.jar;C:\Users\Nishant Guleri\.m2\repository\io\rest-assured\rest-assured-common\5.5.0\rest-assured-common-5.5.0.jar;C:\Users\Nishant Guleri\.m2\repository\io\rest-assured\xml-path\5.5.0\xml-path-5.5.0.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\commons\commons-lang3\3.11\commons-lang3-3.11.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\logging\log4j\log4j-core\2.25.1\log4j-core-2.25.1.jar;C:\Users\Nishant Guleri\.m2\repository\org\apache\logging\log4j\log4j-api\2.25.1\log4j-api-2.25.1.jar;C:\Users\Nishant Guleri\.m2\repository\org\testng\testng\7.11.0\testng-7.11.0.jar;C:\Users\Nishant Guleri\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\Nishant Guleri\.m2\repository\org\jcommander\jcommander\1.83\jcommander-1.83.jar;C:\Users\Nishant Guleri\.m2\repository\org\webjars\jquery\3.7.1\jquery-3.7.1.jar;C:\Users\Nishant Guleri\.m2\repository\com\aventstack\extentreports\5.1.2\extentreports-5.1.2.jar;C:\Users\Nishant Guleri\.m2\repository\io\reactivex\rxjava3\rxjava\3.1.6\rxjava-3.1.6.jar;C:\Users\Nishant Guleri\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\Nishant Guleri\.m2\repository\org\freemarker\freemarker\2.3.32\freemarker-2.3.32.jar;C:\Users\Nishant Guleri\.m2\repository\org\projectlombok\lombok\1.18.26\lombok-1.18.26.jar;C:\Users\Nishant Guleri\.m2\repository\com\google\code\gson\gson\2.10.1\gson-2.10.1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Nishant Guleri"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-01-18"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-17.0.2"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\Nishant Guleri\eclipse-workspace\RestAssuredShiv"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\Nishant Guleri\AppData\Local\Temp\surefire9623802392026206975\surefirebooter-20250815223711871_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.2+8-LTS-86"/>
    <property name="user.name" value="Nishant Guleri"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Nishant Guleri\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\NISHAN~1\AppData\Local\Temp\"/>
    <property name="java.version" value="17.0.2"/>
    <property name="user.dir" value="C:\Users\Nishant Guleri\eclipse-workspace\RestAssuredShiv"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-17.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\Siemens\NX1980\CAPITALINTEGRATION\capitalnxremote\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\apache-maven-3.8.4\bin;C:\Program Files\Java\jdk-17.0.2\bin;C:\Program Files\Notepad++;C:\Program Files\Perforce\;C:\Program Files\Git\cmd;C:\Users\Nishant Guleri\AppData\Local\Programs\Python\Python313\Scripts\;C:\Users\Nishant Guleri\AppData\Local\Programs\Python\Python313\;C:\Users\Nishant Guleri\AppData\Local\Programs\Python\Launcher\;C:\Users\Nishant Guleri\AppData\Local\Microsoft\WindowsApps;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="17.0.2+8-LTS-86"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="validatingServiceHealth" classname="com.bookapi.testcases.HealthCheckTest" time="2.467">
    <system-out><![CDATA[&amp#27;[4;34mvalidatingServiceHealth&amp#27;[0m
&amp#27;[0;34mPreRequiste- Validating if Server is up and running.&amp#27;[0m
2025-08-15 22:37:14 TRACE - PreRequiste- Validating if Server is up and Running...
Request method:	GET
Request URI:	http://127.0.0.1:8000/health
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 200 OK
date: Fri, 15 Aug 2025 17:07:15 GMT
server: uvicorn
content-length: 15
content-type: application/json

{
    "status": "up"
}
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:200. EXPECTED [200]  ACTUAL [200]&amp#27;[0m
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /health. SCHEMA [schemas/GetHealth.json]&amp#27;[0m
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating status value. EXPECTED [up]  ACTUAL [up]&amp#27;[0m
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating Server header. EXPECTED [uvicorn]  ACTUAL [uvicorn]&amp#27;[0m
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating Content-Type header. EXPECTED [application/json]  ACTUAL [application/json]&amp#27;[0m
2025-08-15 22:37:16 TRACE - PreRequiste-  Validated Server is up and Running!!!
===============TEST CASES ENDED======================
]]></system-out>
    <system-err><![CDATA[SLF4J(W): No SLF4J providers were found.
SLF4J(W): Defaulting to no-operation (NOP) logger implementation
SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.
]]></system-err>
  </testcase>
  <testcase name="createNewUser" classname="com.bookapi.testcases.CreateUserSignupTest" time="0.429">
    <system-out><![CDATA[&amp#27;[4;34mcreateNewUser&amp#27;[0m
&amp#27;[0;34mValidating creation of new user&amp#27;[0m
2025-08-15 22:37:16 TRACE - Creating Sign Up Request with Random Email ID and Random ID....
2025-08-15 22:37:16 TRACE - Created Sign Up Request with random email as user2657@example.com and random ID as 5872!!!!
2025-08-15 22:37:16 TRACE - Creating a new user....
Request method:	POST
Request URI:	http://127.0.0.1:8000/signup
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 5872,
    "email": "user2657@example.com",
    "password": "pwd8901"
}
HTTP/1.1 200 OK
date: Fri, 15 Aug 2025 17:07:15 GMT
server: uvicorn
content-length: 39
content-type: application/json

{
    "message": "User created successfully"
}
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:200. EXPECTED [200]  ACTUAL [200]&amp#27;[0m
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /signup. SCHEMA [schemas/Message.json]&amp#27;[0m
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating message value. EXPECTED [User created successfully]  ACTUAL [User created successfully]&amp#27;[0m
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating Server header. EXPECTED [uvicorn]  ACTUAL [uvicorn]&amp#27;[0m
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating Content-Type header. EXPECTED [application/json]  ACTUAL [application/json]&amp#27;[0m
2025-08-15 22:37:16 TRACE - Created a new user!!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="createExistingUser" classname="com.bookapi.testcases.CreateUserSignupTest" time="0.046">
    <system-out><![CDATA[&amp#27;[4;34mcreateExistingUser&amp#27;[0m
&amp#27;[0;34mNEGATIVE: Validating creation of new user with existing email and id&amp#27;[0m
2025-08-15 22:37:16 TRACE - Adding an exsting user....
Request method:	POST
Request URI:	http://127.0.0.1:8000/signup
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 5872,
    "email": "user2657@example.com",
    "password": "pwd8901"
}
HTTP/1.1 400 Bad Request
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 37
content-type: application/json

{
    "detail": "Email already registered"
}
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:400. EXPECTED [400]  ACTUAL [400]&amp#27;[0m
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /signup. SCHEMA [schemas/Detail.json]&amp#27;[0m
2025-08-15 22:37:16 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating detail value. EXPECTED [Email already registered]  ACTUAL [Email already registered]&amp#27;[0m
2025-08-15 22:37:16 TRACE - Unable to add an existing user!!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="loginUsingnewlyCreatedUser" classname="com.bookapi.testcases.LoginForAccessTokenTest" time="0.272">
    <system-out><![CDATA[&amp#27;[4;34mloginUsingnewlyCreatedUser&amp#27;[0m
&amp#27;[0;34mLogin using newly created user&amp#27;[0m
2025-08-15 22:37:16 TRACE - Login using newly created user....
Request method:	POST
Request URI:	http://127.0.0.1:8000/login
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 5872,
    "email": "user2657@example.com",
    "password": "pwd8901"
}
HTTP/1.1 200 OK
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 185
content-type: application/json

{
    "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjY1N0BleGFtcGxlLmNvbSIsImV4cCI6MTc1NTI3OTQzN30.j3h6WHQijdKNX9NeTUwr6i8RpNfQIT5GiOUmzdrrh1o",
    "token_type": "bearer"
}
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:200. EXPECTED [200]  ACTUAL [200]&amp#27;[0m
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /login. SCHEMA [schemas/LoginForAccessToken.json]&amp#27;[0m
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating token type value. EXPECTED [bearer]  ACTUAL [bearer]&amp#27;[0m
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating if access token is not null string | Value: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjY1N0BleGFtcGxlLmNvbSIsImV4cCI6MTc1NTI3OTQzN30.j3h6WHQijdKNX9NeTUwr6i8RpNfQIT5GiOUmzdrrh1o&amp#27;[0m
2025-08-15 22:37:17 TRACE - Logged in using newly created user!!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="loginUsingIncorrectCred[user2657@example.com, Incorrectpwd](1)" classname="com.bookapi.testcases.LoginForAccessTokenTest" time="0.263">
    <system-out><![CDATA[&amp#27;[4;34mloginUsingIncorrectCred&amp#27;[0m
&amp#27;[0;34mNEGATIVE: Login using incorrect credentails&amp#27;[0m
2025-08-15 22:37:17 TRACE - Login using incorrect credentails....
Request method:	POST
Request URI:	http://127.0.0.1:8000/login
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1911,
    "email": "user2657@example.com",
    "password": "Incorrectpwd"
}
HTTP/1.1 400 Bad Request
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 40
content-type: application/json

{
    "detail": "Incorrect email or password"
}
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:400. EXPECTED [400]  ACTUAL [400]&amp#27;[0m
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /login. SCHEMA [schemas/Detail.json]&amp#27;[0m
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating detail value. EXPECTED [Incorrect email or password]  ACTUAL [Incorrect email or password]&amp#27;[0m
2025-08-15 22:37:17 TRACE - User unable to login using incorrect credentails!!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="loginUsingIncorrectCred[IncorrectUser, pwd8901](2)" classname="com.bookapi.testcases.LoginForAccessTokenTest" time="0.031">
    <system-out><![CDATA[&amp#27;[4;34mloginUsingIncorrectCred&amp#27;[0m
&amp#27;[0;34mNEGATIVE: Login using incorrect credentails&amp#27;[0m
2025-08-15 22:37:17 TRACE - Login using incorrect credentails....
Request method:	POST
Request URI:	http://127.0.0.1:8000/login
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1911,
    "email": "IncorrectUser",
    "password": "pwd8901"
}
HTTP/1.1 400 Bad Request
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 40
content-type: application/json

{
    "detail": "Incorrect email or password"
}
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:400. EXPECTED [400]  ACTUAL [400]&amp#27;[0m
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /login. SCHEMA [schemas/Detail.json]&amp#27;[0m
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating detail value. EXPECTED [Incorrect email or password]  ACTUAL [Incorrect email or password]&amp#27;[0m
2025-08-15 22:37:17 TRACE - User unable to login using incorrect credentails!!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="loginUsingIncorrectCred[user2657@example.com, ](3)" classname="com.bookapi.testcases.LoginForAccessTokenTest" time="0.255">
    <system-out><![CDATA[&amp#27;[4;34mloginUsingIncorrectCred&amp#27;[0m
&amp#27;[0;34mNEGATIVE: Login using incorrect credentails&amp#27;[0m
2025-08-15 22:37:17 TRACE - Login using incorrect credentails....
Request method:	POST
Request URI:	http://127.0.0.1:8000/login
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1911,
    "email": "user2657@example.com",
    "password": ""
}
HTTP/1.1 400 Bad Request
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 40
content-type: application/json

{
    "detail": "Incorrect email or password"
}
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:400. EXPECTED [400]  ACTUAL [400]&amp#27;[0m
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /login. SCHEMA [schemas/Detail.json]&amp#27;[0m
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating detail value. EXPECTED [Incorrect email or password]  ACTUAL [Incorrect email or password]&amp#27;[0m
2025-08-15 22:37:17 TRACE - User unable to login using incorrect credentails!!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="loginUsingIncorrectCred[, pwd8901](4)" classname="com.bookapi.testcases.LoginForAccessTokenTest" time="0.279">
    <system-out><![CDATA[&amp#27;[4;34mloginUsingIncorrectCred&amp#27;[0m
&amp#27;[0;34mNEGATIVE: Login using incorrect credentails&amp#27;[0m
2025-08-15 22:37:17 TRACE - Login using incorrect credentails....
Request method:	POST
Request URI:	http://127.0.0.1:8000/login
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 1911,
    "email": "",
    "password": "pwd8901"
}
HTTP/1.1 400 Bad Request
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 40
content-type: application/json

{
    "detail": "Incorrect email or password"
}
2025-08-15 22:37:17 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:400. EXPECTED [400]  ACTUAL [400]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /login. SCHEMA [schemas/Detail.json]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating detail value. EXPECTED [Incorrect email or password]  ACTUAL [Incorrect email or password]&amp#27;[0m
2025-08-15 22:37:18 TRACE - User unable to login using incorrect credentails!!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="validatingBooksAreDisplayed" classname="com.bookapi.testcases.GetAllBooksTest" time="0.058">
    <system-out><![CDATA[&amp#27;[4;34mvalidatingBooksAreDisplayed&amp#27;[0m
&amp#27;[0;34mValidating if books are displayed&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validating if books are displaued...
Request method:	GET
Request URI:	http://127.0.0.1:8000/books/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjY1N0BleGFtcGxlLmNvbSIsImV4cCI6MTc1NTI3OTQzN30.j3h6WHQijdKNX9NeTUwr6i8RpNfQIT5GiOUmzdrrh1o
				Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 200 OK
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 2726
content-type: application/json

[
    {
        "book_summary": "letters from a stoic",
        "author": "Shiv sahil",
        "id": 0,
        "name": "letters from a stoic",
        "published_year": 1145
    },
    {
        "book_summary": "Summary C",
        "author": "Author C",
        "id": 1,
        "name": "Book C",
        "published_year": 0
    },
    {
        "book_summary": "Summary D",
        "author": "Author D",
        "id": 2,
        "name": "",
        "published_year": 2000
    },
    {
        "book_summary": "letters from a stoic",
        "author": "seneca",
        "id": 540,
        "name": "letters from a stoic",
        "published_year": 1145
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 1189,
        "name": "a song of ice and fire 1189",
        "published_year": 1967
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "Shiv sahil",
        "id": 1357,
        "name": "a song of ice and fire 1357",
        "published_year": 1984
    },
    {
        "book_summary": "updated book summary",
        "author": "updated Author Name",
        "id": 1552,
        "name": "updated  Name",
        "published_year": 1700
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 2856,
        "name": "a song of ice and fire 2856",
        "published_year": 1935
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 3550,
        "name": "a song of ice and fire 3550",
        "published_year": 1907
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 4025,
        "name": "a song of ice and fire 4025",
        "published_year": 2009
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 4340,
        "name": "a song of ice and fire 4340",
        "published_year": 1832
    },
    {
        "book_summary": "updated book summary",
        "author": "updated Author Name",
        "id": 5678,
        "name": "updated  Name",
        "published_year": 1700
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 6136,
        "name": "a song of ice and fire 6136",
        "published_year": 1777
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 6696,
        "name": "a song of ice and fire 6696",
        "published_year": 1932
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 6865,
        "name": "a song of ice and fire 6865",
        "published_year": 1990
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 9010,
        "name": "a song of ice and fire 9010",
        "published_year": 1975
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "Shiv sahil",
        "id": 9102,
        "name": "a song of ice and fire 9102",
        "published_year": 1874
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 9132,
        "name": "a song of ice and fire 9132",
        "published_year": 1774
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 9183,
        "name": "a song of ice and fire 9183",
        "published_year": 1844
    }
]
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:200. EXPECTED [200]  ACTUAL [200]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /books/. SCHEMA [schemas/GetAllBooks.json]&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validated books are displayed!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="NoBooksDisplayedForInvalidToken" classname="com.bookapi.testcases.GetAllBooksTest" time="0.047">
    <system-out><![CDATA[&amp#27;[4;34mNoBooksDisplayedForInvalidToken&amp#27;[0m
&amp#27;[0;34mNEGATIVE: Validating if books are not displayed when invalid token used&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validating no books are displaued when invalid token used...
Request method:	GET
Request URI:	http://127.0.0.1:8000/books/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer incorrectToken
				Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 403 Forbidden
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 43
content-type: application/json

{
    "detail": "Invalid token or expired token"
}
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:403. EXPECTED [403]  ACTUAL [403]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /books/. SCHEMA [schemas/Detail.json]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] iNVALID Authentication token given. EXPECTED [Invalid token or expired token]  ACTUAL [Invalid token or expired token]&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validated no books are displayed when invalid token is used!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="NoBooksDisplayedForNoToken" classname="com.bookapi.testcases.GetAllBooksTest" time="0.021">
    <system-out><![CDATA[&amp#27;[4;34mNoBooksDisplayedForNoToken&amp#27;[0m
&amp#27;[0;34mNEGATIVE: Validating if books are displayed when no token used&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validating no books are displaued when no token used...
Request method:	GET
Request URI:	http://127.0.0.1:8000/books/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 403 Forbidden
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 30
content-type: application/json

{
    "detail": "Not authenticated"
}
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:403. EXPECTED [403]  ACTUAL [403]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /books/. SCHEMA [schemas/Detail.json]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] No Authentication token given. EXPECTED [Not authenticated]  ACTUAL [Not authenticated]&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validated no books are displayed when no token is used!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="validatingUserAbleToCreateNewBook" classname="com.bookapi.testcases.CreateBookTest" time="0.035">
    <system-out><![CDATA[&amp#27;[4;34mvalidatingUserAbleToCreateNewBook&amp#27;[0m
&amp#27;[0;34mValidating if user able to create a book&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validating if user able to create a book...
Request method:	POST
Request URI:	http://127.0.0.1:8000/books/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjY1N0BleGFtcGxlLmNvbSIsImV4cCI6MTc1NTI3OTQzN30.j3h6WHQijdKNX9NeTUwr6i8RpNfQIT5GiOUmzdrrh1o
				Accept=application/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 99,
    "name": "a song of ice and fire 99",
    "author": "R R Martin",
    "published_year": 2006,
    "book_summary": "Medieval Fiction about a continent of Westeros."
}
HTTP/1.1 200 OK
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 153
content-type: application/json

{
    "book_summary": "Medieval Fiction about a continent of Westeros.",
    "author": "R R Martin",
    "id": 99,
    "name": "a song of ice and fire 99",
    "published_year": 2006
}
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:200. EXPECTED [200]  ACTUAL [200]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /books/. SCHEMA [schemas/GetBook.json]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating Server header. EXPECTED [uvicorn]  ACTUAL [uvicorn]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating Content-Type header. EXPECTED [application/json]  ACTUAL [application/json]&amp#27;[0m
2025-08-15 22:37:18 TRACE - new book has been creation!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="validatingNewBookIsDisplayedInList" classname="com.bookapi.testcases.CreateBookTest" time="0.045">
    <system-out><![CDATA[&amp#27;[4;34mvalidatingNewBookIsDisplayedInList&amp#27;[0m
&amp#27;[0;34mValidating if newly created book is displayed in the list of all the books&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validating if newly created book with 99is displayed in the list of all the books...
Request method:	GET
Request URI:	http://127.0.0.1:8000/books/
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjY1N0BleGFtcGxlLmNvbSIsImV4cCI6MTc1NTI3OTQzN30.j3h6WHQijdKNX9NeTUwr6i8RpNfQIT5GiOUmzdrrh1o
				Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 200 OK
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 2880
content-type: application/json

[
    {
        "book_summary": "letters from a stoic",
        "author": "Shiv sahil",
        "id": 0,
        "name": "letters from a stoic",
        "published_year": 1145
    },
    {
        "book_summary": "Summary C",
        "author": "Author C",
        "id": 1,
        "name": "Book C",
        "published_year": 0
    },
    {
        "book_summary": "Summary D",
        "author": "Author D",
        "id": 2,
        "name": "",
        "published_year": 2000
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 99,
        "name": "a song of ice and fire 99",
        "published_year": 2006
    },
    {
        "book_summary": "letters from a stoic",
        "author": "seneca",
        "id": 540,
        "name": "letters from a stoic",
        "published_year": 1145
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 1189,
        "name": "a song of ice and fire 1189",
        "published_year": 1967
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "Shiv sahil",
        "id": 1357,
        "name": "a song of ice and fire 1357",
        "published_year": 1984
    },
    {
        "book_summary": "updated book summary",
        "author": "updated Author Name",
        "id": 1552,
        "name": "updated  Name",
        "published_year": 1700
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 2856,
        "name": "a song of ice and fire 2856",
        "published_year": 1935
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 3550,
        "name": "a song of ice and fire 3550",
        "published_year": 1907
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 4025,
        "name": "a song of ice and fire 4025",
        "published_year": 2009
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 4340,
        "name": "a song of ice and fire 4340",
        "published_year": 1832
    },
    {
        "book_summary": "updated book summary",
        "author": "updated Author Name",
        "id": 5678,
        "name": "updated  Name",
        "published_year": 1700
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 6136,
        "name": "a song of ice and fire 6136",
        "published_year": 1777
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 6696,
        "name": "a song of ice and fire 6696",
        "published_year": 1932
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 6865,
        "name": "a song of ice and fire 6865",
        "published_year": 1990
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 9010,
        "name": "a song of ice and fire 9010",
        "published_year": 1975
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "Shiv sahil",
        "id": 9102,
        "name": "a song of ice and fire 9102",
        "published_year": 1874
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 9132,
        "name": "a song of ice and fire 9132",
        "published_year": 1774
    },
    {
        "book_summary": "Medieval Fiction about a continent of Westeros.",
        "author": "R R Martin",
        "id": 9183,
        "name": "a song of ice and fire 9183",
        "published_year": 1844
    }
]
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:200. EXPECTED [200]  ACTUAL [200]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /books/. SCHEMA [schemas/GetAllBooks.json]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Checking for presence of the newly added book&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validated newly created book is displayed in the list of all the books!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="validatingIfUserAbleToSearchBookByID" classname="com.bookapi.testcases.GetBookByIdTest" time="0.038">
    <system-out><![CDATA[&amp#27;[4;34mvalidatingIfUserAbleToSearchBookByID&amp#27;[0m
&amp#27;[0;34mValidating newly created book can be searched using ID&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validating if user is able to search a book with ID 99...
Request method:	GET
Request URI:	http://127.0.0.1:8000/books/99
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	bookId=99
Headers:		Authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjY1N0BleGFtcGxlLmNvbSIsImV4cCI6MTc1NTI3OTQzN30.j3h6WHQijdKNX9NeTUwr6i8RpNfQIT5GiOUmzdrrh1o
				Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 200 OK
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 153
content-type: application/json

{
    "book_summary": "Medieval Fiction about a continent of Westeros.",
    "author": "R R Martin",
    "id": 99,
    "name": "a song of ice and fire 99",
    "published_year": 2006
}
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:200. EXPECTED [200]  ACTUAL [200]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /books/{bookId}. SCHEMA [schemas/GetBook.json]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] validating if 99 is present on the page. EXPECTED [99]  ACTUAL [99]&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validated user is able to search a book with ID 99!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="validatingIfUserAbleToSearchIncorrectBookByID" classname="com.bookapi.testcases.GetBookByIdTest" time="0.03">
    <system-out><![CDATA[&amp#27;[4;34mvalidatingIfUserAbleToSearchIncorrectBookByID&amp#27;[0m
&amp#27;[0;34mNEGATIVE: Validating user unable to search a book with incorrect ID&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validating if user is able to search a book with ID 99...
Request method:	GET
Request URI:	http://127.0.0.1:8000/books/12345
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	bookId=12345
Headers:		Authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjY1N0BleGFtcGxlLmNvbSIsImV4cCI6MTc1NTI3OTQzN30.j3h6WHQijdKNX9NeTUwr6i8RpNfQIT5GiOUmzdrrh1o
				Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 404 Not Found
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 27
content-type: application/json

{
    "detail": "Book not found"
}
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:404. EXPECTED [404]  ACTUAL [404]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /books/{bookId}. SCHEMA [schemas/Detail.json]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] validating if book is incorrect ID  is NOT present on the page. EXPECTED [Book not found]  ACTUAL [Book not found]&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validated user is able to search a book with ID 99!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="validateUserAbleToUpdateNewlyAddedBook" classname="com.bookapi.testcases.UpdateBookTest" time="0.067">
    <system-out><![CDATA[&amp#27;[4;34mvalidateUserAbleToUpdateNewlyAddedBook&amp#27;[0m
&amp#27;[0;34mUpdating newly added book&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validating if user is able to update the book with ID 99...
Request method:	PUT
Request URI:	http://127.0.0.1:8000/books/99
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	bookId=99
Headers:		Authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjY1N0BleGFtcGxlLmNvbSIsImV4cCI6MTc1NTI3OTQzN30.j3h6WHQijdKNX9NeTUwr6i8RpNfQIT5GiOUmzdrrh1o
				Accept=application/json
				Content-Type=application/json
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "id": 99,
    "name": "updated  Name",
    "author": "updated Author Name",
    "published_year": 1700,
    "book_summary": "updated book summary"
}
HTTP/1.1 200 OK
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 123
content-type: application/json

{
    "book_summary": "updated book summary",
    "author": "updated Author Name",
    "id": 99,
    "name": "updated  Name",
    "published_year": 1700
}
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:200. EXPECTED [200]  ACTUAL [200]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /books/{bookId}. SCHEMA [schemas/GetBook.json]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] validating if book with ID99 name has beeen updated. EXPECTED [updated Author Name]  ACTUAL [updated Author Name]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating Server header. EXPECTED [uvicorn]  ACTUAL [uvicorn]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating Content-Type header. EXPECTED [application/json]  ACTUAL [application/json]&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validated user is able to update the book with ID 99!!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="validatingIfUserAbleToSearchUpdatedBookByID" classname="com.bookapi.testcases.UpdateBookTest" time="0.033">
    <system-out><![CDATA[&amp#27;[4;34mvalidatingIfUserAbleToSearchUpdatedBookByID&amp#27;[0m
&amp#27;[0;34mValidating newly created book can be searched using ID&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validating if user is able to search UPDATED book with ID 99...
Request method:	GET
Request URI:	http://127.0.0.1:8000/books/99
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	bookId=99
Headers:		Authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjY1N0BleGFtcGxlLmNvbSIsImV4cCI6MTc1NTI3OTQzN30.j3h6WHQijdKNX9NeTUwr6i8RpNfQIT5GiOUmzdrrh1o
				Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 200 OK
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 123
content-type: application/json

{
    "book_summary": "updated book summary",
    "author": "updated Author Name",
    "id": 99,
    "name": "updated  Name",
    "published_year": 1700
}
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:200. EXPECTED [200]  ACTUAL [200]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /books/{bookId}. SCHEMA [schemas/GetBook.json]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] validating if updates on book with ID 99 is present on the page. EXPECTED [updated Author Name]  ACTUAL [updated Author Name]&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validated user is able to search UPDATED book with ID 99!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="validatingIfUserAbleToDeleteBookByID" classname="com.bookapi.testcases.DeleteBookTest" time="0.058">
    <system-out><![CDATA[&amp#27;[4;34mvalidatingIfUserAbleToDeleteBookByID&amp#27;[0m
&amp#27;[0;34mDelating newly created book can be searched using ID&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validating if user is able to delete a book with ID 99...
Request method:	DELETE
Request URI:	http://127.0.0.1:8000/books/99
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	bookId=99
Headers:		Authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjY1N0BleGFtcGxlLmNvbSIsImV4cCI6MTc1NTI3OTQzN30.j3h6WHQijdKNX9NeTUwr6i8RpNfQIT5GiOUmzdrrh1o
				Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 200 OK
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 39
content-type: application/json

{
    "message": "Book deleted successfully"
}
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:200. EXPECTED [200]  ACTUAL [200]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /books/{bookId}. SCHEMA [schemas/Message.json]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] validating if 99 is delete on the page. EXPECTED [Book deleted successfully]  ACTUAL [Book deleted successfully]&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validated user is able to delete a book with ID 99!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
  <testcase name="validatingIfUserAbleToDeleteBookByIDAgain" classname="com.bookapi.testcases.DeleteBookTest" time="0.022">
    <system-out><![CDATA[&amp#27;[4;34mvalidatingIfUserAbleToDeleteBookByIDAgain&amp#27;[0m
&amp#27;[0;34mNEGATIVE: againDelating newly created book can be searched using ID&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validating if user is able to delete a book with ID 99...
Request method:	DELETE
Request URI:	http://127.0.0.1:8000/books/99
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	bookId=99
Headers:		Authorization=Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1c2VyMjY1N0BleGFtcGxlLmNvbSIsImV4cCI6MTc1NTI3OTQzN30.j3h6WHQijdKNX9NeTUwr6i8RpNfQIT5GiOUmzdrrh1o
				Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>
HTTP/1.1 404 Not Found
date: Fri, 15 Aug 2025 17:07:16 GMT
server: uvicorn
content-length: 27
content-type: application/json

{
    "detail": "Book not found"
}
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating HTTP Status code:404. EXPECTED [404]  ACTUAL [404]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] Validating JSON schema for GET /books/{bookId}. SCHEMA [schemas/Detail.json]&amp#27;[0m
2025-08-15 22:37:18 INFO  - &amp#27;[0;32m[VERIFICATION - PASS] validating if user getting error on deleting book with ID 99 again. EXPECTED [Book not found]  ACTUAL [Book not found]&amp#27;[0m
2025-08-15 22:37:18 TRACE - Validated user is able to delete a book with ID 99!!!
===============TEST CASES ENDED======================
]]></system-out>
  </testcase>
</testsuite>